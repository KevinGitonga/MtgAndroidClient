plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
   /* id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'*/
    id 'io.gitlab.arturbosch.detekt'
    id 'com.diffplug.spotless'
}


//Load Keystore Properties
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    signingConfigs {
        releasesigner {
            storeFile file('../triggerise_task_key')
            keyAlias keystoreProperties.keyAlias
            keyPassword keystoreProperties.storePassword
            storePassword keystoreProperties.keyPassword
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    compileSdk 31

    defaultConfig {
        applicationId "org.triggerise.triggerisetask"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "triggerise" +".v" +versionCode

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            buildConfigField "String", "API_BASE_URL", '"https://api.magicthegathering.io/v1/"'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releasesigner
        }

        debug{
            minifyEnabled false
            buildConfigField "String", "API_BASE_URL", '"https://api.magicthegathering.io/v1/"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    //Core Apis
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Lifecycle components
    def lifecycle_version = "2.4.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"


    //Glide
    implementation("io.coil-kt:coil:1.4.0")

    //Retrofit
    def version_retrofit = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$version_retrofit"

    //Okhttp Network
    def okhttpLoggingInterceptorVersion = '4.9.1'
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"


    //Dagger Hilt
    def hilt_version = "2.40.2"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    //Api Data Pagination
    def paging_version = "3.1.0"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"


    //Firebase Services
    //implementation platform('com.google.firebase:firebase-bom:28.0.1')
    //implementation 'com.google.firebase:firebase-crashlytics'

    //Timber Logging
    implementation 'com.jakewharton.timber:timber:5.0.1'

    //Unit Test Implementations
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.7.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'org.mockito:mockito-inline:3.3.3'
    testImplementation 'androidx.test:core-ktx:1.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test:core-ktx:1.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'

    testImplementation "com.google.truth:truth:1.1.3"

}

kapt {
    correctErrorTypes true
}

apply from: "../spotless.gradle"
